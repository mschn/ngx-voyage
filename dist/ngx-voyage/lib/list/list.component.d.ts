import { OnChanges, SimpleChanges } from '@angular/core';
import { MenuItem, SortEvent } from 'primeng/api';
import { ContextMenu } from 'primeng/contextmenu';
import { Table } from 'primeng/table';
import { getFileIcon } from '../model/file-types';
import { Message } from '../model/message';
import { File, FilePreviewOutput, FileSortFields } from '../model/model';
import { prettyBytes } from '../model/utils';
import * as i0 from "@angular/core";
export declare class ListComponent implements OnChanges {
    #private;
    contextMenu: import("@angular/core").Signal<ContextMenu | undefined>;
    dataTable: import("@angular/core").Signal<Table | undefined>;
    path: import("@angular/core").InputSignal<string>;
    files: import("@angular/core").InputSignal<File[]>;
    message: import("@angular/core").InputSignal<Message | undefined>;
    loading: import("@angular/core").InputSignal<boolean>;
    filteredFiles: import("@angular/core").Signal<File[]>;
    sortOrder: import("@angular/core").WritableSignal<number>;
    sortField: import("@angular/core").WritableSignal<FileSortFields | undefined>;
    sortedFiles: import("@angular/core").Signal<File[]>;
    openFolder: import("@angular/core").OutputEmitterRef<string>;
    openFile: import("@angular/core").OutputEmitterRef<string>;
    previewFile: import("@angular/core").OutputEmitterRef<FilePreviewOutput>;
    prettyBytes: typeof prettyBytes;
    getFileIcon: typeof getFileIcon;
    selectedFile: import("@angular/core").ModelSignal<File | undefined>;
    showPreview: import("@angular/core").ModelSignal<boolean>;
    previewData: import("@angular/core").WritableSignal<any>;
    menuItems: MenuItem[];
    constructor();
    ngOnChanges(changes: SimpleChanges): void;
    onDoubleClick(file: File): void;
    onMouseDown(event: MouseEvent): void;
    openFilePreview(file: File): void;
    openFileOrFolder(file: File): void;
    onContextMenu(event: MouseEvent, file: File): void;
    onSort(event: SortEvent): void;
    onKeydown(event: KeyboardEvent): void;
    selectFileWithOffset(offset: -1 | 1): void;
    selectFirstFile(): void;
    selectFile(file: File): void;
    formatDate(file: File): string;
    getTargetPath(file: File): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<ListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ListComponent, "ngx-voyage-list", never, { "path": { "alias": "path"; "required": true; "isSignal": true; }; "files": { "alias": "files"; "required": true; "isSignal": true; }; "message": { "alias": "message"; "required": false; "isSignal": true; }; "loading": { "alias": "loading"; "required": false; "isSignal": true; }; "selectedFile": { "alias": "selectedFile"; "required": false; "isSignal": true; }; "showPreview": { "alias": "showPreview"; "required": false; "isSignal": true; }; }, { "openFolder": "openFolder"; "openFile": "openFile"; "previewFile": "previewFile"; "selectedFile": "selectedFileChange"; "showPreview": "showPreviewChange"; }, never, never, true, never>;
}
